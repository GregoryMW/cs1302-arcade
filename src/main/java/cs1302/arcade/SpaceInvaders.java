package cs1302.arcade;

import java.util.Random;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;
import javafx.event.EventHandler;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.KeyCode;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.*;
import javafx.scene.image.*;
import javafx.scene.control.*;
import javafx.scene.paint.*;
import javafx.scene.canvas.*;
import javafx.geometry.*;
import java.util.ArrayList; 
import javafx.animation.Timeline;
import javafx.animation.KeyFrame;
import javafx.event.ActionEvent;
import javafx.util.Duration;

public class SpaceInvaders extends Application
{
    Group screen;
    Scene spaceInvaders;
    Pane background;
    ArrayList<ImageView> invaders;
    ImageView ship;
    KeyFrame keyFrame;
    Timeline timeline;
    int counter;

    /**
     *  Initial setup for the space invader game
     */
    
    private void setup()
        {
            counter = 0;
            screen = new Group();
            spaceInvaders = new Scene(screen, 640, 480, Color.BLACK);
            background = new Pane();
            invaders = new ArrayList<ImageView>();
            addInvaders();
            screen.getChildren().add(background);
        }

    /**
     *  Add invaders and the ship to the scene
     */
    private void addInvaders()
        {
            Image alien1 = new Image("Alien1.png", 30, 30, false, true);
            Image shipPic = new Image("Ship.png", 50, 30, true, true);
            ship = new ImageView(shipPic);
            ship.relocate(300, 420);
            background.getChildren().add(ship);
            int count = 0;
            for(int i = 0; i < 10; i++)
            {
                for (int j = 0; j < 4; j ++)
                {
                    invaders.add(new ImageView(alien1));
                    invaders.get(count).relocate(25 + i * 50, 20 + j * 30);
                    background.getChildren().add(invaders.get(count));
                    count ++;
                }
            }
        }

    /**
     * Return a key event handler that moves to the rectangle to the left
     * or the right depending on what key event is generated by the associated
     * node.
     * @return the key event handler
     */
    private EventHandler<? super KeyEvent> moveShip() {
        return event -> {
            if (event.getCode() == KeyCode.LEFT && ship.getX() > -280){
                ship.setX(ship.getX() - 10.0);}
            if (event.getCode() == KeyCode.RIGHT && ship.getX() + 50 < 320){
                ship.setX(ship.getX() + 10.0);}
            // TODO bounds checking
        };
    }

    /**
     *  Moves the aliens every n number of seconds 
     *  based on the level of the game
     */
    private void moveAliens(){
                
        EventHandler<ActionEvent> moveAliens = e -> {
            Runnable r = () -> {
                if(counter % 2 == 0){
                    invaders.stream().forEach(a -> {
                            Platform.runLater(() -> a.setX(a.getX() + 10.0));
                        });
                    if(invaders.get(10).getX() > 100){
                        increaseCounter();
                        invaders.stream().forEach(a -> {
                            Platform.runLater(() -> a.setY(a.getY() + 10.0));
                        });
                    }
                }
                else if(counter % 2 == 1){
                    
                    invaders.stream().forEach(a -> {
                            Platform.runLater(() -> a.setX(a.getX() - 10.0));
                        });
                    if(invaders.get(1).getX() < 10){
                        increaseCounter();
                        invaders.stream().forEach(a -> {
                            Platform.runLater(() -> a.setY(a.getY() + 10.0));
                        });
                    }
                }
            };

            Thread t = new Thread(r);
            t.setDaemon(true);
            t.start();
        };
        
        keyFrame = new KeyFrame(Duration.seconds(0.25), moveAliens);
        timeline = new Timeline();
        timeline.setCycleCount(Timeline.INDEFINITE);
        timeline.getKeyFrames().add(keyFrame);
        timeline.play();        
    }

    /**
     *  Increases the counter to help keep track of how far down the
     *  aliens have moved in the game.
     *  {@param count} counter to be increased
     *  {@return int} new value of the counter 
     */
    private void increaseCounter(){
        counter++;
    }
    
    /** {@inheritdoc} */
    @Override
    public void start(Stage stage)
        {
            setup();
            screen.setOnKeyPressed(moveShip());
            screen.requestFocus();
            moveAliens();
            stage.setTitle("Space Invaders");
            stage.setScene(spaceInvaders);
            stage.sizeToScene();
            stage.setResizable(false);
            stage.show();

        } // start
}
